Wie soll die App funktionieren?

Vorerst soll nach drücken eines Start Buttons ein Quizz beginnen indem die erste Frage erscheint.
Man erhält neben der Frage n Antwortmöglichkeiten welche als Buttons aufgeschlüsselt werden.
Nachdem man auf einen Button drückt wird diese Antwort gespeichert und die nächste Frage angezeigt.
Unterhalb des Quiz soll eine Anzeige bekanntgeben wie weit man bereits fortgeschritten ist: 4/25
Nachdem die letzte Frage beantwortet wurde wird das Ergebnis angezeigt.
Außerdem sollen noch die Falschen Antworten abgefragt werden können.

Später könnte man das Quiz noch um weitere Quizzes ergänzen.
Oder einen Timer einbauen, der die Geschwindigkeit misst.

Wie soll das Routing auf dem Server funktionieren?
- Vorerst kommt man in einen Anfangsraum, bei dem man eine RaumID eingeben kann um diesem Beizutreten
- Nach dieser Eingabe kommt man auf einen Startbildschirm des Quiz bei dem man die gewünschte Fragemenge eingeben kann 
- In der Navleiste hat man außerdem die Möglichkeit einen neuen Raum zu erstellen 
- Wenn man einen Raum öffnet wird dabei automatisch von der get-Methode das JSON Objekt an die run-Datai mit übergeben.
- Ein weiteres Mal kommuniziert das Backend und Frontend bei der abgabe des Quiz

Wie soll die Datenstruktur aussehen?

Die Webseite sollte immer mit dem EJS Object User aufgerufen werden.
Hier soll in der Navigationsleite angezeigt werden, ob ein User angemeldet ist oder nicht.
Um einen Raum betreten zu können muss der User angemeldet sein.
In der Navleiste soll das Wort "Login" durch den Usernamen ausgetauscht werden.
Wenn man darauf klickt wird man an den Profile View weitergeleitet, bei dem die Daten eines User angezeigt werden.

Daten eines Users:

User {
    logged_in: Boolean,
    name: String,
    passwort: String,
    email: String,
    veryfied: Boolean,
    questions_answered: Number
}

Daten eines Raums:

Raum {
    name: String,
    passwort: String,
    private: Boolean,
    questions: Array,
    positive_reviews_neccessary: Number,
    positive_reviews_neccessary_percentage: Number (Float),
    only_admins_can_add_and_review: Boolean,
    answered_questions_in_room: Number,
    users_of_room: Array,
    question of questions: {
        question: String,
        Answers: Array,                  // Correct Answers
        reviews_positive: Number,        // Reviewcount
        reviews_negative: Number,
        active: Boolean                  // Erst false und nach dem die Reviewoptionen erfüllt sind wird der Wert positiv und kann in einem Quizz auftauchen 
    }
}